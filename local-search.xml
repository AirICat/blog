<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>StartUnturned</title>
    <link href="/2022/09/29/StartUnturned/"/>
    <url>/2022/09/29/StartUnturned/</url>
    
    <content type="html"><![CDATA[<h1 id="需要材料"><a href="#需要材料" class="headerlink" title="需要材料"></a>需要材料</h1><ol><li>正常steam账号</li><li>服务器</li></ol><h1 id="Steamcmd"><a href="#Steamcmd" class="headerlink" title="Steamcmd"></a>Steamcmd</h1><blockquote><p>这是一个steam 命令端 可在linux使用而无需可视化桌面</p></blockquote><p>首先下载 <a href="https://developer.valvesoftware.com/wiki/SteamCMD">SteamCMD</a></p><p>选择对应的服务器系统类型</p><p>解压运行 -&gt; 等待自动更新</p><p>在此目录新建脚本文件 - 建议名字为updata.bat</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">.\steamcmd.exe +force_install_dir ./UDS/ +login anonymous +app_update <span class="hljs-number">1110390</span> validate<br></code></pre></td></tr></table></figure><h2 id="命令解析"><a href="#命令解析" class="headerlink" title="命令解析"></a>命令解析</h2><ol><li>‘.&#x2F;steamcmd.exe’ 为调用的程序</li><li>+login 为登录的用户 anonymous 为无账号登录使用的公共账号</li><li>+force_install_dir 为安装的位置</li><li>+app_update 为更新或者下载的id 未转变者服务器id为 1110390 , validate 为验证下载的文件</li></ol><p>我比较喜欢bash命令所以我用的是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">winpty ./steamcmd.exe +login anonymous +force_install_dir ./UDS/ +app_update 1110390 validate +quit<br></code></pre></td></tr></table></figure><p>为啥有个winpty<br>因为没有这个对于win命令或交互会无响应，而且加了运行也快了一点</p><h1 id="配置基本信息"><a href="#配置基本信息" class="headerlink" title="配置基本信息"></a>配置基本信息</h1><p>进入steamcmd目录<br>进入uds目录<br>新建LukaServer.bat</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">start</span> &quot;&quot; &quot;%~dp0ServerHelper.bat&quot; +InternetServer/Luka<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p>+InternetServer 为互联网模式可换为 +LanServer 局域网模式<br>&#x2F;后面为服务器备注路径名</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/09/29/jixuxiangqian/"/>
    <url>/2022/09/29/jixuxiangqian/</url>
    
    <content type="html"><![CDATA[<h1 id="《光的另一极》"><a href="#《光的另一极》" class="headerlink" title="《光的另一极》"></a>《光的另一极》</h1><p>夕阳等夜色却 瞥见 那片红<br>像是要疯狂也 不敢 去释放<br>便要卷起云海 不想 就此告别<br>夜色苦盼破晓 不见 光明萦绕</p><p>云儿是否懂我意，不再遮掩我的心<br>我在光的另一极，寻找夕阳留的影</p><p>认定前方不回头，远处的光等者我<br>漆黑的夜忘了梦，无声的我错过光</p><p>明明每日<br>苦苦盼着<br>却<br>不敢去触碰</p><p>心有多渴望<br>内心就有多怕<br>多彩的世界<br>是否<br>能的容下 无色 的我</p><p>云儿是否知我意，不再遮掩我的心<br>我在光的另一极，寻找穿越的理由</p><p>抛下所有的自卑，寻找真正的自我<br>云儿不再去掩莫，跟寻着光的足迹<br>岁月迎来破晓的光，于光的另一极绽放自我</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我为什么要去学我喜欢的</title>
    <link href="/2022/08/05/whyLearnMyLike/"/>
    <url>/2022/08/05/whyLearnMyLike/</url>
    
    <content type="html"><![CDATA[<h1 id="记录一"><a href="#记录一" class="headerlink" title="记录一"></a>记录一</h1><p>为什么要学习我喜欢的，我想每个时间段都有不同的理由<br>不知道从什么时候开始，我对以后的生活是想着提前结束</p><p>在这样的日子里我很纠结，我渴望解脱但同时也有放不下<br>我想着去为最后的生活填上点彩头，<br>学一些能让我在剩下日子里不再无聊的兴趣</p><p>当我去寻找教程铺天盖地的是费用，我知道我没有那个财力<br>年少嘛，说什么自学也能成材，<br>学了一段时间后急于求成的我，加上那些并不完整，复杂更不系统<br>三分热情，最后是放弃了</p><p>现在嘛，一是感觉没什么精神学 二是感觉时间不够用，<code>对，没什么时间虽然每天都在玩</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用termux写hexo博客</title>
    <link href="/2022/08/02/termuxForHexoWrite/"/>
    <url>/2022/08/02/termuxForHexoWrite/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于不可抗力因素 使得我有时不能使用电脑<br>于是我想要不用手机搭出一个hexo环境</p><h1 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h1><ol><li>为什么用proot容器 而不是 termux直接运行<br>因为容器能隔离…. 好吧是我当时遇到了bug所以想用容器试<blockquote><p>然后弄着弄着就知道怎么解决了也懒得再试一次</p></blockquote></li><li>在termux下使用什么编写博客呢？<br>本文由于我要学下<em>vim&#x2F;neovim</em>  所以用的neovim编写</li></ol><p>不过如果你不喜欢这样，推荐你使用 <code>termux-setup-storage</code> 将blog目录放置在可访问的储存中 供其他编辑器访问</p><h1 id="配置运行环境"><a href="#配置运行环境" class="headerlink" title="配置运行环境"></a>配置运行环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install proot-distro<br><span class="hljs-comment"># 安装容器</span><br><br>proot-distro install debian<br><span class="hljs-comment"># 选择Debian容器安装</span><br><br>proot-distro login debian<br><span class="hljs-comment">#登入Debian容器</span><br><br>apt update<br><span class="hljs-comment">#更新软件列表</span><br><br>apt install git nodejs yarnpkg neovim<br><span class="hljs-comment">#如果你不需要neovim 可以不安装</span><br></code></pre></td></tr></table></figure><p>这有比较坑的点 </p><ol><li>这个容器nodejs版本低 但达到 hexo推荐的 v12</li><li>它不自带npm 还是怎么的 我去直接懵了 看看node-npm 看看yarnpkg (apt search到的) 选择了yarn 也就是yarnpkg</li></ol><h1 id="git-初始化仓库"><a href="#git-初始化仓库" class="headerlink" title="git 初始化仓库"></a>git 初始化仓库</h1><ol><li>如果你是第一次创建hexo 博客<br>请参看hexo文档 <strong>现在没时间后面再补</strong></li><li>如果你已有仓库在GitHub<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config -global user.name <span class="hljs-string">&quot;youname&quot;</span><br>git config -global user.email <span class="hljs-string">&quot;youemail&quot;</span><br><span class="hljs-comment">#将youname换成你想要在提交时的名字 youemail同理</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -C <span class="hljs-string">&quot;写入备注&quot;</span><br></code></pre></td></tr></table></figure>此时会让你选择保存路径 就选择默认的目录<br>后面它会让你输入一个密码 这个密码将在你push时需要输入验证不需要就回车省略<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:youname/yourepo.git<br><span class="hljs-comment"># 将 youname 换成 你的名字 yourepo 换成你的仓库名</span><br><br></code></pre></td></tr></table></figure>如果你用的不是这个（ssh）而是http ，那验证的就是账号密码而不是ssh密钥了<br>对了先clone再操作不然你先init后面文件pull不下来改什么东西麻烦死了</li></ol><h1 id="Hexo-使用"><a href="#Hexo-使用" class="headerlink" title="Hexo 使用"></a>Hexo 使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> yourepo<br><span class="hljs-comment">#进入你的仓库</span><br><br>yarnpkg <br><span class="hljs-comment">#补全 node_models</span><br><br>yarnpkg hexo <br><span class="hljs-comment">#是否能正常使用 hexo</span><br></code></pre></td></tr></table></figure><h1 id="优化-命令唤出"><a href="#优化-命令唤出" class="headerlink" title="优化 命令唤出"></a>优化 命令唤出</h1><p>在 termux用户目录下（~）编辑.bashrc 加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> debian=<span class="hljs-string">&#x27;proot-distro login debian&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Adroid</category>
      
      <category>termux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github Action自动化部署hexo博客</title>
    <link href="/2022/08/01/githubActionDeployHexo/"/>
    <url>/2022/08/01/githubActionDeployHexo/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>抱着能偷懒 就偷懒的心态研究了下GitHub Action 好家伙英文中文混合开火 直接给我干蒙了<br>简单的看了下 还是成功了 后面有时间还是要了解下的 感觉很有用 <em>现在就是能用就行</em></p><h1 id="创建GitHub-Action"><a href="#创建GitHub-Action" class="headerlink" title="创建GitHub Action"></a>创建GitHub Action</h1><ol><li>打开GitHub 仓库位置 </li><li>点击 Action</li><li>点击 new workflows</li><li>写入 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">deploy</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [ <span class="hljs-string">&quot;master&quot;</span> ]<br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">latest</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">build</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">npx</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">deploy</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span><br>        <span class="hljs-attr">with:</span> <br>          <span class="hljs-attr">github_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">publish_branch:</span> <span class="hljs-string">gh-pages</span><br>          <span class="hljs-attr">publish_dir:</span> <span class="hljs-string">public</span><br>          <span class="hljs-attr">cname:</span> <span class="hljs-string">you.webSite.com</span><br><br></code></pre></td></tr></table></figure></li></ol><h1 id="相关参考"><a href="#相关参考" class="headerlink" title="相关参考"></a>相关参考</h1><p><a href="https://github.com/marketplace?type=actions&query=actions">Github Actiom 市场</a><br><a href="https://github.com/actions/setup-node">Action nodejs-setup</a><br><a href="https://github.com/peaceiris/actions-gh-pages">Action deploy-pages</a></p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
      <category>Action</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>GithubAction</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>设置Debian系统的Ibus-rime</title>
    <link href="/2022/07/30/setDebianIbus-rime/"/>
    <url>/2022/07/30/setDebianIbus-rime/</url>
    
    <content type="html"><![CDATA[<h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><p>由于我<em>心血来潮</em>想在Linux桌面上建立适合我的桌面 ，所以记录一下我踩的<strong>坑</strong></p><blockquote><p>为啥用ibus呢？ 这玩意好像没有Fcitx5好用<br>可是gnome 下系统默认输入法 和 组件是ibus 悲<br>为了整体美观 开干</p></blockquote><h1 id="安装-ibus-rime"><a href="#安装-ibus-rime" class="headerlink" title="安装 ibus-rime"></a>安装 ibus-rime</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ibus-rime<br></code></pre></td></tr></table></figure><h1 id="设置-ibus-rime"><a href="#设置-ibus-rime" class="headerlink" title="设置 ibus-rime"></a>设置 ibus-rime</h1><h2 id="注-环境为-gnome-桌面环境下"><a href="#注-环境为-gnome-桌面环境下" class="headerlink" title="注 环境为 gnome  桌面环境下"></a><em>注</em> 环境为 gnome  桌面环境下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi ~/.xinputrc<br></code></pre></td></tr></table></figure><p>写入<br><code>run_im ibus</code><br>vi操作 <code>i</code> <code>esc</code> <code>:wq</code></p><p>后退出登录（注销）再进入</p><blockquote><p>这个是命令操作 不过我一开始是弄得 gnome应用 里的 那个<code>输入法</code> 你可能会问我为什么一开始不说那个 因为<em>水水水</em></p></blockquote><h1 id="启用-ibus-rime"><a href="#启用-ibus-rime" class="headerlink" title="启用 ibus-rime"></a>启用 ibus-rime</h1><ol><li>打开设置</li><li>找到区域和语言</li><li>添加输入源 <code>中国（汉语）</code> <code>rime</code></li><li>随便打开一个输入栏 切换 <code>中文rime</code> </li><li>注销登录</li><li>看能不能输入中文</li></ol><h1 id="关于上述完成后打不出中文解决方案一"><a href="#关于上述完成后打不出中文解决方案一" class="headerlink" title="关于上述完成后打不出中文解决方案一"></a>关于上述完成后打不出中文解决方案一</h1><blockquote><p>缘由 在试了半天后逛逛应用商店 发现一个ibus首选项的东西</p></blockquote><ol><li>打开终端<br> 输入 <code>ibus-setup</code><br> 在窗口中 点击输入法<br> 添加 <code>...</code> <code>中文</code> <code>rime</code><br> 删除其他的输入法<br> 注销登录</li></ol><p>再试试能不能输入中文</p><h1 id="大坑"><a href="#大坑" class="headerlink" title="大坑"></a>大坑</h1><p>由于rime竖向向太丑于是想调成横向<br>官方给的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># weasel.custom.yaml</span><br>patch:<br>  style/horizontal: <span class="hljs-literal">true</span>      <span class="hljs-comment"># 候選橫排</span><br>  style/inline_preedit: <span class="hljs-literal">true</span>  <span class="hljs-comment"># 內嵌編碼（僅支持TSF）</span><br>  style/display_tray_icon: <span class="hljs-literal">true</span>  <span class="hljs-comment"># 顯示托盤圖標</span><br><br><span class="hljs-comment">#ibus用户： ibus_rime.custom.yaml</span><br></code></pre></td></tr></table></figure><p>结果您猜怎么样 <strong>根本用不了</strong><br>解决 由于配置最后是在build中执行的 所以把文件放入build中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ~/.config/ibus/rime/build/ibus_rime.yaml</span><br>style:<br>    horizontal: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p><a href="https://rime.im/">rime</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
